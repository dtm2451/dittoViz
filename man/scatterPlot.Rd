% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scatterPlot.R
\name{scatterPlot}
\alias{scatterPlot}
\title{Show RNAseq data overlayed on a scatter plot}
\usage{
scatterPlot(
  data_frame,
  x.by,
  y.by,
  color.by = NULL,
  shape.by = NULL,
  split.by = NULL,
  size = 1,
  rows.use = NULL,
  show.others = TRUE,
  color.adjustment = NULL,
  color.adj.fxn = NULL,
  split.show.all.others = TRUE,
  opacity = 1,
  color.panel = dittoColors(),
  colors = seq_along(color.panel),
  split.nrow = NULL,
  split.ncol = NULL,
  split.adjust = list(),
  shape.panel = c(16, 15, 17, 23, 25, 8),
  rename.color.groups = NULL,
  rename.shape.groups = NULL,
  min.color = "#F0E442",
  max.color = "#0072B2",
  min.value = NA,
  max.value = NA,
  plot.order = c("unordered", "increasing", "decreasing"),
  xlab = x.by,
  ylab = y.by,
  main = "make",
  sub = NULL,
  theme = theme_bw(),
  do.hover = FALSE,
  hover.data = unique(c(color.by, paste0(color.by, "-adj"), shape.by, x.by, y.by)),
  do.contour = FALSE,
  contour.color = "black",
  contour.linetype = 1,
  add.trajectory.by.groups = NULL,
  add.trajectory.curves = NULL,
  trajectory.group.by,
  trajectory.arrow.size = 0.15,
  do.letter = FALSE,
  do.ellipse = FALSE,
  do.label = FALSE,
  labels.size = 5,
  labels.highlight = TRUE,
  labels.repel = TRUE,
  labels.split.by = split.by,
  legend.show = TRUE,
  legend.color.title = color.by,
  legend.color.size = 5,
  legend.color.breaks = waiver(),
  legend.color.breaks.labels = waiver(),
  legend.shape.title = shape.by,
  legend.shape.size = 5,
  show.grid.lines = TRUE,
  do.raster = FALSE,
  raster.dpi = 300,
  data.out = FALSE
)
}
\arguments{
\item{data_frame}{A data_frame where columns are features and rows are observations you wish to visualize.}

\item{x.by, y.by}{Single strings denoting the name of a column of \code{data_frame} to use for the x- and y-axis of the scatterplot.
Data Restriction: Must be continuous.}

\item{color.by}{Single string denoting the name of a column of \code{data_frame} to use for setting the color plotted points.}

\item{shape.by}{Single string denoting the name of a column of \code{data_frame} to use for setting the shape plotted points.
Data Restriction: Must be continuous.}

\item{split.by}{1 or 2 strings naming denoting the name(s) of column(s) to use for faceting / separating data points into separate plots.
Data Restriction: Must be continuous.

When 2 columns are named, c(row,col), the first is used as rows and the second is used for columns of the resulting grid.

When 1 column is named, shape control can be achieved with \code{split.nrow} and \code{split.ncol}}

\item{size}{Number which sets the size of data points. Default = 1.}

\item{rows.use}{String vector of rownames names OR an integer vector specifying the row-indices of data points which should be targetted.

Alternatively, a Logical vector, the same length as the number of cells in the object, which sets which cells to include.}

\item{show.others}{Logical. FALSE by default, whether cells not targetted by \code{rows.use} should be shown in the background, in light gray.}

\item{split.show.all.others}{Logical which sets whether gray "others" cells of facets should include all cells of other facets (\code{TRUE}) versus just cells left out by \code{cell.use} (\code{FALSE}).}

\item{opacity}{Number between 0 and 1.
1 = opaque. 0 = invisible. Default = 1.
(In terms of typical ggplot variables, = alpha)}

\item{color.panel}{String vector which sets the colors to draw from when \code{color.by} indicates discrete data.
\code{dittoColors()} by default, see \code{\link{dittoColors}} for contents.

A named vector can be used if names are matched to the distinct values of the \code{color.by} data.}

\item{colors}{Integer vector, the indexes / order, of colors from \code{color.panel} to actually use.

Useful for quickly swapping around colors of the default set.}

\item{split.nrow, split.ncol}{Integers which set the dimensions of faceting/splitting when a single column is given to \code{split.by}.}

\item{split.adjust}{A named list which allows extra parameters to be pushed through to the faceting function call.
List elements should be valid inputs to the faceting functions, e.g. `list(scales = "free")`.

For options, when giving 1 metadata to \code{split.by}, see \code{\link[ggplot2]{facet_wrap}},
OR when giving 2 metadatas to \code{split.by}, see \code{\link[ggplot2]{facet_grid}}.}

\item{shape.panel}{Vector of integers, corresponding to ggplot shapes, which sets what shapes with \code{shape.by}.
When nothing is supplied to \code{shape.by}, only the first value is used.
Default is a set of 6, \code{c(16,15,17,23,25,8)}, the first being a simple, solid, circle.}

\item{rename.color.groups}{String vector which sets new names for the identities of \code{var} groups.}

\item{rename.shape.groups}{String vector which sets new names for the identities of \code{shape.by} groups.}

\item{min.color}{color for \code{min} value of \code{color.by} data. Default = yellow}

\item{max.color}{color for \code{max} value of \code{color.by} data. Default = blue}

\item{min.value, max.value}{Number which sets the \code{color.by}-data value associated with the minimum or maximum colors.}

\item{plot.order}{String. If the data should be plotted based on the order of the color data, sets whether to plot in "increasing" or "decreasing" order.}

\item{xlab, ylab}{Strings which set the labels for the axes. To remove, set to \code{NULL}.}

\item{main}{String, sets the plot title.
A default title is automatically generated based on \code{color.by} and \code{shape.by} when either are provided.
To remove, set to \code{NULL}.}

\item{sub}{String, sets the plot subtitle.}

\item{theme}{A ggplot theme which will be applied before dittoSeq adjustments.
Default = \code{theme_bw()}.
See \url{https://ggplot2.tidyverse.org/reference/ggtheme.html} for other options and ideas.}

\item{do.hover}{Logical which controls whether the ggplot output will be converted to a plotly object so that data about individual points can be displayed when you hover your cursor over them.
The \code{hover.data} argument is used to determine what data to use.}

\item{hover.data}{String vector of column names of \code{data_frame} which denotes what data to show on hover when \code{do.hover} is set to \code{TRUE}.}

\item{do.contour}{Logical. Whether density-based contours should be displayed.}

\item{contour.color}{String that sets the color(s) of the \code{do.contour} contours.}

\item{contour.linetype}{String or numeric which sets the type of line used for \code{do.contour} contours.
Defaults to "solid", but see \code{\link[ggplot2]{linetype}} for other options.}

\item{add.trajectory.by.groups}{List of vectors representing trajectory paths, each from start-group to end-group, where vector contents are the group-names indicated by the \code{trajectory.group.by} column of \code{data_frame}.}

\item{add.trajectory.curves}{List of matrices, each representing coordinates for a trajectory path, from start to end, where matrix columns represent x and y coordinates of the paths.}

\item{trajectory.group.by}{String denoting the name of a column of \code{data_frame} to use for generating trajectories from data point groups.}

\item{trajectory.arrow.size}{Number representing the size of trajectory arrows, in inches.  Default = 0.15.}

\item{do.letter}{Logical which sets whether letters should be added on top of the colored dots. For extended colorblindness compatibility.
NOTE: \code{do.letter} is ignored if \code{do.hover = TRUE} or \code{shape.by} is provided a metadata because
lettering is incompatible with plotly and with changing the dots' to be different shapes.}

\item{do.ellipse}{Logical. Whether the groups should be surrounded by median-centered ellipses.}

\item{do.label}{Logical. Whether to add text labels near the center (median) of clusters for grouping vars.}

\item{labels.size}{Size of the the labels text}

\item{labels.highlight}{Logical. Whether the labels should have a box behind them}

\item{labels.repel}{Logical, that sets whether the labels' placements will be adjusted with \link{ggrepel} to avoid intersections between labels and plot bounds.
TRUE by default.}

\item{labels.split.by}{String of one or two metadata names which controls the facet-split calculations for label placements.
Defaults to \code{split.by}, so generally there is no need to adjust this except when you are utilizing the \code{extra.vars} input to achieve manual faceting control.}

\item{legend.show}{Logical. Whether any legend should be displayed. Default = \code{TRUE}.}

\item{legend.color.title, legend.shape.title}{Strings which set the title for the color or shape legends.}

\item{legend.color.size, legend.shape.size}{Numbers representing the size at which shapes should be plotted in the color and shape legends (for discrete variable plotting).
Default = 5. *Enlarging the icons in the colors legend is incredibly helpful for making colors more distinguishable by color blind individuals.}

\item{legend.color.breaks}{Numeric vector which sets the discrete values to label in the color-scale legend for continuous data.}

\item{legend.color.breaks.labels}{String vector, with same length as \code{legend.breaks}, which sets the labels for the tick marks of the color-scale.}

\item{show.grid.lines}{Logical which sets whether gridlines of the plot should be shown.}

\item{do.raster}{Logical. When set to \code{TRUE}, rasterizes the internal plot layer, changing it from individually encoded points to a flattened set of pixels.
This can be useful for editing in external programs (e.g. Illustrator) when there are many thousands of data points.}

\item{raster.dpi}{Number indicating dots/pixels per inch (dpi) to use for rasterization. Default = 300.}

\item{data.out}{Logical. When set to \code{TRUE}, changes the output, from the plot alone, to a list containing the plot ("p"),
a data.frame containing the underlying data for target cells ("Target_data"),
and a data.frame containing the underlying data for non-target cells ("Others_data").}
}
\value{
a ggplot scatterplot where colored dots and/or shapes represent individual cells/samples. X and Y axes can be gene expression, numeric metadata, or manually supplied values.

Alternatively, if \code{data.out=TRUE}, a list containing three slots is output: the plot (named 'p'), a data.table containing the underlying data for target cells (named 'Target_data'), and a data.table containing the underlying data for non-target cells (named 'Others_data').

Alternatively, if \code{do.hover} is set to \code{TRUE}, the plot is coverted from ggplot to plotly &
cell/sample information, determined by the \code{hover.data} input, is retrieved, added to the dataframe, and displayed upon hovering the cursor over the plot.
}
\description{
Show RNAseq data overlayed on a scatter plot
}
\details{
This function creates a dataframe with X, Y, color, shape, and faceting data determined by \code{x.by}, \code{y.by}, \code{color.by}, \code{shape.var}, and \code{split.by}.
Any extra gene or metadata requested with \code{extra.var} is added as well.
For expression/counts data, \code{assay}, \code{slot}, and \code{adjustment} inputs (\code{.x}, \code{.y}, and \code{.color}) can be used to change which data is used, and if it should be adjusted in some way.

Next, if a set of cells or samples to use is indicated with the \code{cells.use} input, then the dataframe is split into \code{Target_data} and \code{Others_data} based on subsetting by the target cells/samples.

Finally, a scatter plot is created using these dataframes.
Non-target cells are colored in gray if \code{show.others=TRUE},
and target cell data is displayed on top, colored and shaped based on the \code{color.by}- and \code{shape.by}-associated data.
If \code{split.by} was used, the plot will be split into a matrix of panels based on the associated groupings.
}
\section{Many characteristics of the plot can be adjusted using discrete inputs}{

\itemize{
\item \code{size} and \code{opacity} can be used to adjust the size and transparency of the data points. \strong{\code{size}} can be given a number, or a column name of \code{data_frame}.
\item Colors used can be adjusted with \code{color.panel} and/or \code{colors} for discrete data, or \code{min}, \code{max}, \code{min.color}, and \code{max.color} for continuous data.
\item Shapes used can be adjusted with \code{shape.panel}.
\item Color and shape labels can be changed using \code{rename.color.groups} and \code{rename.shape.groups}.
\item Titles and axes labels can be adjusted with \code{main}, \code{sub}, \code{xlab}, \code{ylab}, and \code{legend.title} arguments.
\item Legends can also be adjusted in other ways, using variables that all start with "\code{legend.}" for easy tab completion lookup.
}
}

\examples{
library(dittoSeq)
example(importDittoBulk, echo = FALSE)
myRNA

#  == the default way to extract
myRNA$nCount_RNA <- runif(60,200,1000)
myRNA$nFeature_RNA <- myRNA$nCount_RNA*runif(60,0.95,1.05)
# and also percent.mito metadata
myRNA$percent.mito <- sample(c(runif(50,0,0.05),runif(10,0.05,0.2)))

df <- as.data.frame(colData(myRNA))
df$gene1 <- dittoSeq::gene("gene1", myRNA)
df$gene2 <- dittoSeq::gene("gene2", myRNA)
df$gene3 <- dittoSeq::gene("gene3", myRNA)
df$pca1 <- dittoSeq:::.extract_Reduced_Dim("pca", 1, myRNA)$embeddings
df$pca2 <- dittoSeq:::.extract_Reduced_Dim("pca", 2, myRNA)$embeddings

scatterPlot(
    df, x.by = "nCount_RNA", y.by = "nFeature_RNA")

# Shapes or colors can be overlaid representing discrete metadata
#   or (only colors) continuous metadata / expression data by providing
#   metadata or gene names to 'color.by' and 'shape.by'
scatterPlot(
    df, x.by = "gene1", y.by = "gene2",
    color.by = "groups",
    shape.by = "SNP",
    size = 3)

# Data can be "split" or faceted by a discrete variable as well.
scatterPlot(df, x.by = "gene1", y.by = "gene2",
    split.by = "timepoint") # single split.by element
scatterPlot(df, x.by = "gene1", y.by = "gene2",
    split.by = c("groups","SNP")) # row and col split.by elements
# OR with 'extra.vars' plus manually faceting for added control
scatterPlot(df, x.by = "gene1", y.by = "gene2") +
    facet_wrap("SNP", ncol = 1, strip.position = "left")

# Countours can also be added to help illumunate overlapping samples
scatterPlot(df, x.by = "gene1", y.by = "gene2",
    do.contour = TRUE)

}
\seealso{
\code{\link{scatterHex}} for a hex-binned version that can be useful when points are very dense.
}
\author{
Daniel Bunis
}
